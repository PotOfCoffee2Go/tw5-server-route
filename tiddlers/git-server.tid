closer: poc2go-tab-closer
created: 20250810034229836
list: git-server-intro
modified: 20250811100226104
tags: 
title: git-server
type: text/vnd.tiddlywiki

<style>
.col3 { column-count:3; }
</style>

!!! Configuration Wiki

Example of adding a custom server request to [[TiddlyWiki on Node.js|https://tiddlywiki.com/static/TiddlyWiki%2520on%2520Node.js.html]] 'server' edition.  It uses the HTTP connection that is established by [[WebServer|https://tiddlywiki.com/static/WebServer.html]] to route the request to the server.

> No TiddlyWiki $:/core tiddlers were harmed in making of custom server requests. It relies on  Webserver, adaptors, syncer, etc. to all run as usual.

<$details summary="About">

The request and server processing are working templates designed as a foundation to build upon. Demonstrates sending a request, server creates/adds a tiddler to the wiki showing values received, and @@.mono-m syncFromServer()@@ is called to retrieve tiddler(s) the server has created/updated. 

<hr class="poc2go-hr">
</$details>

<$details summary="Usage">

To make a request use a macro of the same name as the route; in this case the custom route is named @@.mono-m my-route@@.

```
<$button actions=<<my-route my-topic "[tag[unused]]">> >
Send @@.mono-m my-route@@ request
</$button>
```

The macro sends a topic, a filter, and the sender title (currentTiddler) the server can use to process requests.

<hr class="poc2go-hr">
</$details>

<$details summary="Rolling your own route">

The tiddlers that implement @@.mono-m my-route@@ are:

@@.mono
client-side macro [[$:/poc2go/macros/custom/server/request.js]]<br>
Server-side route [[$:/poc2go/modules/custom/server/route.js]]
@@

These tiddlers are a starting framework to develop your own server requests. Clone them and change @@.mono-m const route = 'my-route';@@ to the name you wish to use as a route @@color:red;in BOTH tiddlers@@ to create a new request/route.

<hr class="poc2go-hr">
</$details>

See @@.mono-m my-route@@ in action:

<$button actions=<<my-route my-topic "[tag[unused]]">> >
Send @@.mono-m my-route@@ request
</$button>
&nbsp;
<$button actions=<<my-route resetTiddlers>> >
Reset counter request
</$button>

<<list-links filter:"[prefix[Server Tiddler]sort[created]]" emptyMessage:" (No Server Tiddlers)" class:"col3">>

<$details summary="Button WikiText">

```
<$button actions=<<my-route my-topic "[tag[unused]]">> >
Send @@.mono-m my-route@@ request
</$button>

<$button actions=<<my-route resetTiddlers>> >
Reset counter request
</$button>
```

</$details>

<<tabs "[list[git-server!!closer]]" "" "$:/state/tab/git-server-tabs">>

<<tabs "[list[git-server!!list]]" "" "$:/state/tab/git-server-tabs">>

@@color:aqua;border:1px solid aqua;border-radius:6px;font-size:.9em; &nbsp;  [[Top|git-server]] &nbsp; @@
